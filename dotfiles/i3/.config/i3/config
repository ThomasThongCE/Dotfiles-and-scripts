# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

#set $mod Mod1
set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
#font pango:monospace 8
font pango:FontAwesome 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
bindsym $mod+d exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+g split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+ctrl+space focus mode_toggle

# focus the parent container
# bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $workspace1 "1:"
set $workspace2 "2:"
set $workspace3 "3:"
set $workspace6 "6:office"
set $workspace4 "4:Editor"
set $workspace5 "5:"
set $workspace7 "7:"
#set $workspace7 "7:?"
set $workspace8 "8:"
set $workspace9 "9:"


# switch to workspace
bindsym $mod+1 workspace $workspace1
bindsym $mod+2 workspace $workspace2
bindsym $mod+3 workspace $workspace3
bindsym $mod+4 workspace $workspace4
bindsym $mod+5 workspace $workspace5
bindsym $mod+6 workspace $workspace6
bindsym $mod+7 workspace $workspace7
bindsym $mod+8 workspace $workspace8
bindsym $mod+9 workspace $workspace9
bindsym $mod+0 workspace $workspace10

# move focused container to workspace
bindsym $mod+shift+1 move container to workspace $workspace1
bindsym $mod+shift+2 move container to workspace $workspace2
bindsym $mod+shift+3 move container to workspace $workspace3
bindsym $mod+shift+4 move container to workspace $workspace4
bindsym $mod+shift+5 move container to workspace $workspace5
bindsym $mod+shift+6 move container to workspace $workspace6
bindsym $mod+shift+7 move container to workspace $workspace7
bindsym $mod+shift+8 move container to workspace $workspace8
bindsym $mod+shift+9 move container to workspace $workspace9
bindsym $mod+shift+0 move container to workspace $workspace10

assign [class="obsidian"] $workspace8
assign [class="Firefox"] $workspace3
assign [class=".*browser.*"] $workspace3
assign [class=".*chrome.*"] $workspace3
# assign [class="brave-browser"] $workspace3
assign [class="Code"] $workspace4
assign [class="Eclipse"] $workspace4
assign [class=".*office.*"] $workspace6
assign [class="Nautilus"] $workspace5
assign [class="Thunar"] $workspace5
assign [class="Rhythmbox"] $workspace7
assign [class="discord"] $workspace8
assign [class="Skype"] $workspace8
assign [class=".*Steam"] $workspace9
assign [class=".*steam"] $workspace9

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

set $bg-color 	         #2f343f
set $ws-color 	         #344feb
set $inactive-bg-color   #2f343f
set $text-color          #f3f4f5
set $inactive-text-color #676E7D
set $urgent-bg-color #E53935

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        font pango:FontAwesome bold 10
        status_command i3status
        colors {
	    	background $bg-color
	    	separator #757575
		    #                  border             background         text
		    focused_workspace  $bg-color          $bg-color          $text-color
		    inactive_workspace $inactive-bg-color $inactive-bg-color $inactive-text-color
		    urgent_workspace   $urgent-bg-color   $urgent-bg-color   $text-color
        }
}

# power mode
mode "power system" {
    bindsym l exec i3lock --color 475263, mode "default"
    bindsym s exec i3lock --color 475263 && systemctl suspend, mode "default"
    bindsym r exec systemctl reboot, mode "default"
    bindsym h exec systemctl poweroff, mode "default"

    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+p mode "power system" 

# app mode
mode "app" {
    #bindsym b exec brave-browser-stable, mode "default" 
    bindsym b exec google-chrome-stable , mode "default" 
    bindsym n exec obsidian, mode "default"
    bindsym c exec code, mode "default"

    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+a mode "app" 


### i3-gaps stuff ###

# Necessary for i3-gaps to work properly (pixel can be any value)
for_window [class="^.*"] border pixel 3

# Smart Gaps
smart_gaps on

# Smart Borders
smart_borders on

# Some color adjustments
client.focused          #000000 #000000 #000000 #14213d #e5e5e5
client.focused_inactive #000000 #000000 #000000 #000000 #000000
client.unfocused        #000000 #000000 #000000 #000000 #000000

# Set inner/outer gaps
gaps inner 12
gaps outer -2

# Gaps mode
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}

# Disable focus follow mouse
focus_follows_mouse no

# volumn blind
bindsym XF86AudioMute exec amixer sset 'Master' toggle
bindsym XF86AudioLowerVolume exec amixer sset 'Master' 5%- && notify-send --hint=string:x-dunst-stack-tag:volume "Volume : $(amixer get Master | grep % | awk -F'[][]' '{print $2}')"
bindsym XF86AudioRaiseVolume exec amixer sset 'Master' 5%+ && notify-send --hint=string:x-dunst-stack-tag:volume "Volume : $(amixer get Master | grep % | awk -F'[][]' '{print $2}')"

bindsym XF86MonBrightnessUp exec brightnessctl -q s +5% && notify-send --hint=string:x-dunst-stack-tag:brightness "Brightness: $(brightnessctl g)" # increase screen brightness
bindsym XF86MonBrightnessDown exec brightnessctl -q s 5%- && notify-send --hint=string:x-dunst-stack-tag:brightness "Brightness: $(brightnessctl g)" # decrease screen brightness

# open explorer
bindsym $mod+o exec thunar

# open screen shot 
bindsym $mod+b exec flameshot gui
bindsym Print exec flameshot full -c

# scratchpad config
# exec --no-startup-id conky
for_window [instance="Conky"] move scratchpad
#for_window [con_mark="alsamixer"] move scratchpad
bindsym $mod+Ctrl+Tab move scratchpad
bindsym $mod+Tab scratchpad show

# auto run program

# running profile-sync-daemon for chromium and anything-sync-daemon for ~/.cache
# exec systemctl --user start psd
# exec systemctl start asd

# Open lxpokit: use for authentication
exec --no-startup-id lxpolkit

# Open pulseaudio
exec --no-startup-id pulseaudio -D

# Open network manager
exec --no-startup-id nm-tray

# Open redshift
exec --no-startup-id redshift -l 14.0583:108.2772

# transparent
# exec --no-startup-id compton -f -I 0.1 -O 0.1 -i 0.9

# execute ibus deamon
exec --no-startup-id ibus-daemon -d -r -x

# execute dropbox
# exec --no-startup-id dropbox start

# execute ryzenadj
# exec --no-startup-id sudo ryzenadj --stapm-limit=15000 --fast-limit=12000 --slow-limit=12000 --tctl-temp=60 

